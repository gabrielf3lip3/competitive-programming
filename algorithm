1 3 2 4 8

4 3 5 6 8

1 percorrer o array de entradas do usuario

para i de 0 até l-n faça:


2 determinar o intervalo com o maior numero de consecutivos
3 pega os maiores distantes dos consecutivos
4 troca com os menores (mais proximos do intervalo)
5 guardar o numero de trocas
